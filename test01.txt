
------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.
se and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.
se and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.
se and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windose and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windose and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windose and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windose and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windose and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windose and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windose and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windo
11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windo
11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windo
12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".


11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".


11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".


11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

/**************************************************************************
        Temperature sensor in SIS Healthcare system
        Zichuan "Jerry" Ye
        2014/12/1
**************************************************************************/

The temperature sensor is a key component in SIS Healthcare system. By design, 
it provides the functionalities that can be applied to measure, store and report 
temperatures to SIS server and thereafter other components in SIS Healthcare 
system. The implementation of Temperature functionalities includes three aspects: 
stand-alone Temperature Component, temperature setting menu in GUI and 
SIS messages that involves Temperature Component and other components in 
SIS Healthcare system.

This "readme" file descriptions of how to run the Temperature Component is given. 
A user can follow the instructions to start the component and have it report 
temperature measurements to GUI, schedule a start and/or end time of 
measurement, send out alert if a certain temperature threshold is reached and 
select what content is included in the alert.

User Menu:
(0) This menu uses file directories on the PC in lab (SQ-6508). In case you want to 
install the program on your own machine, please change the following directories 
into the ones that you use. Also, please make sure that you have the latest version 
of Java. You may find the latest version on www.java.com. Download a version no 
less than JRE 1.8.

(1) Before start any program execution, please make sure that there is no running 
"TEMPerV21.exe" in your processes, and unplugging and re-plugging the physical 
temperature sensor to PC.

(2) Go to "\PersonalHealthcare2014_v5\PersonalHealthcare2014\Components", you 
can find a "init.bat" file there. Please remember to change the directories in the .bat 
file before you run it. Otherwise you may see it doesn't start.

(3) Double click it then wait for all windows popping out and components initiated.

(4) To have temperature component working, go to the window of GUI and click the 
check-box of "TEMP". 

(5) Select/type-in the parameters for the temperature component before clicking 
"OK". If you have any problem in getting to this point, please contact Jerry at 
zichuan@pitt.edu.

(6) In case you'd like to ask SIS to send emails to your preferred email address, please 
type the email in the text fields labeled in GUI accordingly. You need to select the 
checkbox before the system can take your email as an valid input. Otherwise it takes 
the default address.

(7) Now everything should be set up and ready to go. Click "View" in the GUI. Real-
time temperature readings will appear on your GUI panel at the given rate that you 
set up earlier in the "temperature set-up" window. If you have a preferred start/end 
time for running the component, it will start and end at your given time accordingly.

(8) If a certain temperature threshold is reached (high or low bound), an email is sent 
out to the address as of your input in GUI panel. The default email address for testing 
is "chronobot@ksiresearch.org". You may use your own email instead. If you have any 
problem sending email to your own email address, please contact Jerry.

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processoring are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

------------------------ Procedue --------------------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java


------------------------------- Procedure to run ---------------------------------

1. Open "eclipse" on desktop (current version: Kepler) and also turn on 
PaceTech healthcare monitor using the switch on its back.  For more about 
eclipse and Java serial port driver, please visit www.eclipse.org and 
www.java.com/en/.

2. Check "Package Explore" directory at the left side of eclipse. If there 
already is a "ConnectPaceTech" project in your workspace, skip Step 2 and Step 
3. Otherwise, click "File" at the up-left cover of the window, and then select 
"Import". Click "General" tag and select "Existing Projects into Workspace" and 
then click "Next".

3. Put "C:\Users\admin.sis\Desktop\Jerry's workspace\ConnectPaceTech" (the 
directory where the project is located) into "Select root directory" and then 
click "Browse..." at its right side. You should see a project named 
"ConnectPaceTech" in "Projects" window. Select it and then click "Finish" at 
the bottom.

4. Now you should have "ConnectPaceTech" project imported into eclipse and 
ready to use. This project has already packed all necessary drivers of serial 
port. Please contact Jerry if you have any question in terms of drivers or 
project components. 

5. In "Package Explore" window, open "ConnectPaceTech" -> "src" -> 
"inputProcessing". Then double click "InputProcessor.java". Now you should be 
in the input processing file.

6. Before starting the input processor, make sure you have a local server open. 
Go to "root\scripts" and double click "runserver.bat" to run the server.

7. Before starting the InputProcessor, we need to connect the components with
SIS testbed using the project remote. Go to the program directory, double click 
"prjRemote.jar" so that you are in the remote interface.

8. In the interface of project remote, click "connect" at the top. Please be 
noted that the default Server's IP is 127.0.0.1, and Port Number is 7999.

9. Now you need to start all components in SIS. Go to the control board of the 
project remote and click "load". Browse to root\PersonalHealthcare2014\XML\InitXML, 
open file "list_InitXML.txt". Then you should be directed back to project remote. 
Now there should be some key/value entries under "Sending Message" block. Click 
"Send All" at the bottom. Then, go to root\PersonalHealthcare2014\Scripts. 
Double-click "runAllComps.bat" to open all components (in this study case, there 
are just one "SPO2" component and an "uploader" for simplicity reasons). 

Please be noted that there may be problems such that windows for each components 
does not show up. It is very likely to be resulted from either one of the 
following reasons: (1) the SIS server is not turned on, (2) Components were not 
initiated in project remote before running all of them, (3) Any one of the files 
used for this project is missing or placed in a wrong directory. Please contact 
Jerry (zichuan@cs.pitt.edu) for further help.

10. The environment for running SIS should be set up ready after Step 7 and 9. 
Now you may start the InputProcessor. Go back to Eclipse and right-click on 
"InputProcessor.java". Select "Run As" -> "1 Java Application". Then you should 
see it start working.

11. Put one of your fingers into the clamp sensor and wait for the device read 
data. You should see a message popped out in the dialogue window in Eclipse such 
as:
"Sent a message -------------
MsgID: 33
SPO2: 97
DateTime: 2014-03-27 16:42:47.00000380"
This means that the XML file for data in SPO2 component is updated. DO NOT stop 
InputProcessor yet! You will terminate the server connection along with shutting 
down the input processor, which will make the following step (Step 12) not being 
able to operate as it describes.

12. Go back to project remote and click "Load" again. This time we need to load 
the data and send it to component. Go to root\PersonalHealthcare2014\XML\DataXML, 
open "SPO2_reading.XML". Now you should be back to the project remote. Click 
"Send All". As a result you should be a message containing MsgID, Description, 
SPO2 value and Time in both components' windows. At the meanwhile, the uploader 
should start connecting to the email server and send out the above message to the 
email address which is described in the uploader component "createUploader.java".

* This instruction of how to run input processor between SIS and PaceTech 
healthcare monitoris updated on 3/27/2014. Please follow the instructions 
step-by-step. If you have any question, please contact Jerry Ye at 
zichuan@cs.pitt.edu.

* BE AWARE! Some of the libraries that are used in this project are not 
genuine JAVA libraries. Third party libraries such as "RXTX.jar", "javax.jar" 
and so on need to be put into the system library directory so that they can 
be properly used. The system library directory for JAVA is located at: 
JAVA_HOME(should be like: 'jdk1.7.0_45')\jre\lib, and JAVA_HOME\jre\lib\ext.
These directories may vary at different versions of JAVA SE.

* All the source code for input processing are located in \root\src\. The codes 
for components (especially for uploader) for are stored in each folder at 
\root\PersonalHealthcare2014\Components.

*********************** instruction update 04/27/2014 ************************

* The program in this zip file is specifically used for handling 
information regarding PaceTech healthcare monitor (V-4000). Please 
set up the program in this way:

(1) if you DON'T have any SIS version so far, you may unzip this 
file and use the contents included. 

(2) if you DO have a SIS version, you may unzip this file and do 
following: copy ALL files that are unzipped from this package and 
copy them to the ROOT folder of your SIS. If there is a file 
conflict during merge, you may replace the old version to the new 
one ONLY in the following circumstances:
  (a) any old files that are in conflict with the new file in 
"root\script\runserver.bat" should be replaced;
  (b) if there is any conflict in "root\src\...", please keep the 
new version. Be noted, all files under ...\src\ are for eclipse 
projects. They are NOT compiled!
  (c) for any other conflict, please keep the old version. If you 
are not sure about which one to keep, please contact Jerry Ye at 
zichuan@pitt.edu.  

(3) the "System" folder in this zip file is only used for testing. 
You may delete it if there is any file conflict.

(4) the source code for the following components can be found at:
InputProcessor: root\src\inputProcessing\InputProcessor.java
Upload: root\PersonalHealthcare2014\Components\UpLoader\CreateUpLoader.java
SPO2: root\PersonalHealthcare2014\Components\SPO2\CreateSPO2.java

